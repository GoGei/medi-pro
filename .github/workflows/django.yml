name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.11 ]

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      UV_PYTHON: ${{ matrix.python-version }}
      UV_PROJECT_ENVIRONMENT: env
      SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: test_settings

      DATABASE_NAME: test_db
      DATABASE_USER: test_user
      DATABASE_PASSWORD: test_password
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432

      REDIS_HOST: localhost

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run checks
        run: |
          uv run python manage.py check
          uv run flake8

      - name: Run Tests with Coverage
        run: |
          uv run coverage run manage.py migrate --noinput
          uv run coverage run -m django test
          uv run coverage report -m
          uv run coverage xml
